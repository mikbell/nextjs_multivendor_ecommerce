// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SELLER
}

model User {
  id        String  @id // Clerk user ID
  firstName String
  lastName  String
  email     String  @unique
  picture   String  @db.Text
  role      Role    @default(USER)
  phone     String?
  isActive  Boolean @default(true)
  
  // Relazioni (da implementare in futuro)
  // orders    Order[]
  // products  Product[] // Per i venditori
  // reviews   Review[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

/// Outbox queue per sincronizzare i cambi ruolo verso Clerk anche quando il DB viene
/// aggiornato fuori dall'app (es. da Prisma Studio). Popolata da un trigger MySQL.
model RoleSyncQueue {
  userId     String  @id
  role       Role
  enqueuedAt DateTime @default(now())
  processed  Boolean  @default(false)

  @@map("role_sync_queue")
}
