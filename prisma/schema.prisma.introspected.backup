generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model coupontouser {
  A String
  B String

  @@unique([A, B], map: "_CouponToUser_AB_unique")
  @@index([B], map: "_CouponToUser_B_index")
  @@map("_coupontouser")
}

model userfollowingstore {
  A String
  B String

  @@unique([A, B], map: "_UserFollowingStore_AB_unique")
  @@index([B], map: "_UserFollowingStore_B_index")
  @@map("_userfollowingstore")
}

model cart {
  id           String   @id
  userId       String   @unique(map: "Cart_userId_key")
  couponId     String?
  shippingFees Float    @default(0)
  subTotal     Float
  total        Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime

  @@index([couponId], map: "Cart_couponId_idx")
}

model cartitem {
  id          String   @id
  productId   String
  variantId   String
  sizeId      String
  productSlug String
  variantSlug String
  sku         String
  name        String
  image       String
  size        String
  price       Float
  quantity    Int      @default(1)
  shippingFee Float    @default(0)
  totalPrice  Float
  cartId      String
  storeId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@index([cartId], map: "CartItem_cartId_idx")
  @@index([storeId], map: "CartItem_storeId_idx")
}

model category {
  id        String   @id
  name      String
  image     String
  featured  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime
  url       String   @unique(map: "Category_url_key")
}

model color {
  id               String   @id
  name             String
  productVariantId String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())

  @@index([productVariantId], map: "Color_productVariantId_idx")
}

model country {
  id        String   @id
  name      String   @unique(map: "Country_name_key")
  code      String   @unique(map: "Country_code_key")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model coupon {
  id        String   @id
  code      String   @unique(map: "Coupon_code_key")
  startDate String
  endDate   String
  discount  Int
  storeId   String
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@index([storeId], map: "Coupon_storeId_idx")
}

model freeshipping {
  id        String   @id
  productId String   @unique(map: "FreeShipping_productId_key")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model freeshippingcountry {
  id             String   @id
  freeShippingId String
  countryId      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())

  @@index([countryId], map: "FreeShippingCountry_countryId_idx")
  @@index([freeShippingId], map: "FreeShippingCountry_freeShippingId_idx")
}

model offertag {
  id        String   @id
  name      String
  url       String   @unique(map: "OfferTag_url_key")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model order {
  id                String               @id
  userId            String
  createdAt         DateTime             @default(now())
  updatedAt         DateTime
  orderStatus       order_orderStatus    @default(Pending)
  paymentMethod     order_paymentMethod?
  paymentStatus     order_paymentStatus  @default(Pending)
  shippingAddressId String
  shippingFees      Float
  subTotal          Float
  total             Float

  @@index([shippingAddressId], map: "Order_shippingAddressId_idx")
  @@index([userId], map: "Order_userId_idx")
}

model ordergroup {
  id                  String            @id
  status              ordergroup_status @default(Pending)
  shippingService     String
  shippingDeliveryMin Int
  shippingDeliveryMax Int
  shippingFees        Float
  subTotal            Float
  total               Float
  orderId             String
  storeId             String
  couponId            String?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime

  @@index([couponId], map: "OrderGroup_couponId_idx")
  @@index([orderId], map: "OrderGroup_orderId_idx")
  @@index([storeId], map: "OrderGroup_storeId_idx")
}

model orderitem {
  id           String           @id
  quantity     Int              @default(1)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime
  image        String
  name         String
  orderGroupId String
  price        Float
  productId    String
  productSlug  String
  shippingFee  Float            @default(0)
  size         String
  sizeId       String
  sku          String
  status       orderitem_status @default(Pending)
  totalPrice   Float
  variantId    String
  variantSlug  String

  @@index([orderGroupId], map: "OrderItem_orderGroupId_idx")
}

model paymentdetails {
  id              String   @id
  paymentInetntId String
  paymentMethod   String
  status          String
  amount          Float
  currency        String
  orderId         String   @unique(map: "PaymentDetails_orderId_key")
  userId          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime

  @@index([orderId], map: "PaymentDetails_orderId_idx")
  @@index([userId], map: "PaymentDetails_userId_idx")
}

model product {
  id                          String                    @id
  name                        String
  description                 String                    @db.LongText
  slug                        String                    @unique(map: "Product_slug_key")
  brand                       String
  rating                      Float                     @default(0)
  storeId                     String
  categoryId                  String
  subCategoryId               String
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @default(now())
  freeShippingForAllCountries Boolean                   @default(false)
  numReviews                  Int                       @default(0)
  offerTagId                  String?
  sales                       Int                       @default(0)
  shippingFeeMethod           product_shippingFeeMethod @default(ITEM)
  views                       Int                       @default(0)

  @@index([categoryId], map: "Product_categoryId_idx")
  @@index([offerTagId], map: "Product_offerTagId_idx")
  @@index([storeId], map: "Product_storeId_idx")
  @@index([subCategoryId], map: "Product_subCategoryId_idx")
}

model productvariant {
  id                 String   @id
  slug               String   @unique(map: "ProductVariant_slug_key")
  keywords           String
  sku                String
  productId          String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())
  isSale             Boolean  @default(false)
  saleEndDate        String?
  sales              Int      @default(0)
  variantDescription String?  @db.LongText
  variantImage       String
  variantName        String
  weight             Float

  @@index([productId], map: "ProductVariant_productId_idx")
}

model productvariantimage {
  id               String   @id
  url              String
  alt              String   @default("")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
  order            Int?
  productVariantId String

  @@index([productVariantId], map: "ProductVariantImage_productVariantId_idx")
}

model question {
  id        String   @id
  question  String
  answer    String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([productId], map: "Question_productId_idx")
}

model review {
  id        String   @id
  rating    Float
  userId    String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  color     String
  likes     Int      @default(0)
  quantity  String
  review    String
  size      String
  variant   String

  @@index([productId], map: "Review_productId_idx")
  @@index([userId], map: "Review_userId_idx")
}

model reviewimage {
  id        String   @id
  url       String
  alt       String   @default("")
  reviewId  String
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@index([reviewId], map: "ReviewImage_reviewId_idx")
}

model shippingaddress {
  id        String   @id
  firstName String
  lastName  String
  phone     String
  address1  String
  address2  String?
  state     String
  city      String
  zip_code  String
  default   Boolean  @default(false)
  userId    String
  countryId String
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@index([countryId], map: "ShippingAddress_countryId_idx")
  @@index([userId], map: "ShippingAddress_userId_idx")
}

model shippingrate {
  id                           String   @id
  shippingService              String
  shippingFeePerItem           Float
  shippingFeeForAdditionalItem Float
  shippingFeePerKg             Float
  shippingFeeFixed             Float
  deliveryTimeMin              Int
  deliveryTimeMax              Int
  returnPolicy                 String
  countryId                    String
  storeId                      String
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @default(now())

  @@index([countryId], map: "ShippingRate_countryId_idx")
  @@index([storeId], map: "ShippingRate_storeId_idx")
}

model size {
  id               String   @id
  size             String
  quantity         Int
  price            Float
  discount         Float    @default(0)
  productVariantId String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())

  @@index([productVariantId], map: "Size_productVariantId_idx")
}

model spec {
  id        String   @id
  name      String
  value     String
  productId String?
  variantId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([productId], map: "Spec_productId_idx")
  @@index([variantId], map: "Spec_variantId_idx")
}

model store {
  id                                  String       @id
  name                                String
  slug                                String       @unique(map: "Store_slug_key")
  description                         String       @db.Text
  email                               String       @unique(map: "Store_email_key")
  phone                               String
  logo                                String
  cover                               String
  featured                            Boolean      @default(false)
  status                              store_status @default(PENDING)
  averageRating                       Float        @default(0)
  returnPolicy                        String       @default("Return in 30 days.")
  defaultShippingService              String       @default("International Delivery")
  defaultDeliveryTimeMin              Int          @default(7)
  defaultDeliveryTimeMax              Int          @default(31)
  userId                              String
  createdAt                           DateTime     @default(now())
  updatedAt                           DateTime     @default(now())
  defaultShippingFeeFixed             Float        @default(0)
  defaultShippingFeeForAdditionalItem Float        @default(0)
  defaultShippingFeePerItem           Float        @default(0)
  defaultShippingFeePerKg             Float        @default(0)
  numReviews                          Int          @default(0)
  url                                 String       @unique(map: "Store_url_key")

  @@index([userId], map: "Store_userId_idx")
}

model subcategory {
  id         String   @id
  name       String
  image      String
  featured   Boolean  @default(false)
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  url        String   @unique(map: "SubCategory_url_key")

  @@index([categoryId], map: "SubCategory_categoryId_idx")
}

model user {
  id        String    @id
  email     String    @unique(map: "User_email_key")
  picture   String    @db.Text
  role      user_role @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  name      String
}

model wishlist {
  id        String   @id
  userId    String
  productId String
  variantId String
  sizeId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@index([productId], map: "Wishlist_productId_idx")
  @@index([sizeId], map: "Wishlist_sizeId_idx")
  @@index([userId], map: "Wishlist_userId_idx")
  @@index([variantId], map: "Wishlist_variantId_idx")
}

enum ordergroup_status {
  Pending
  Confirmed
  Processing
  Shipped
  OutforDelivery
  Delivered
  Cancelled
  Failed
  Refunded
  Returned
  PartiallyShipped
  OnHold
}

enum user_role {
  USER
  ADMIN
  SELLER
}

enum order_orderStatus {
  Pending
  Confirmed
  Processing
  Shipped
  OutforDelivery
  Delivered
  Cancelled
  Failed
  Refunded
  Returned
  PartiallyShipped
  OnHold
}

enum order_paymentMethod {
  Paypal
  Stripe
}

enum order_paymentStatus {
  Pending
  Paid
  Failed
  Declined
  Cancelled
  Refunded
  PartiallyRefunded
  Chargeback
}

enum store_status {
  PENDING
  ACTIVE
  BANNED
  DISABLED
}

enum orderitem_status {
  Pending
  Processing
  ReadyForShipment
  Shipped
  Delivered
  Canceled
  Returned
  Refunded
  FailedDelivery
  OnHold
  Backordered
  PartiallyShipped
  ExchangeRequested
  AwaitingPickup
}

enum product_shippingFeeMethod {
  ITEM
  WEIGHT
  FIXED
}
